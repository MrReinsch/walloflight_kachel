Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./src/bam.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./src/bam.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
LOAD ./src/bam.o
LOAD ./src/transceive_data.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6e0
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000034                . = ALIGN (0x2)
                0x0000000000000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000034        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000034                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000034                __ctors_start = .
 *(.ctors)
                0x0000000000000034                __ctors_end = .
                0x0000000000000034                __dtors_start = .
 *(.dtors)
                0x0000000000000034                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000034        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
                0x0000000000000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000034        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000040       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000040                __do_copy_data
 .init4         0x0000000000000056       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000056                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000066        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
 *(.init9)
 *(.text)
 .text          0x000000000000006a        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
                0x000000000000006a                __vector_22
                0x000000000000006a                __vector_1
                0x000000000000006a                __vector_24
                0x000000000000006a                __vector_12
                0x000000000000006a                __bad_interrupt
                0x000000000000006a                __vector_6
                0x000000000000006a                __vector_23
                0x000000000000006a                __vector_25
                0x000000000000006a                __vector_11
                0x000000000000006a                __vector_19
                0x000000000000006a                __vector_7
                0x000000000000006a                __vector_5
                0x000000000000006a                __vector_4
                0x000000000000006a                __vector_9
                0x000000000000006a                __vector_2
                0x000000000000006a                __vector_21
                0x000000000000006a                __vector_15
                0x000000000000006a                __vector_8
                0x000000000000006a                __vector_14
                0x000000000000006a                __vector_10
                0x000000000000006a                __vector_16
                0x000000000000006a                __vector_18
                0x000000000000006a                __vector_20
 .text          0x000000000000006c        0x0 ./src/bam.o
 .text          0x000000000000006c        0x0 ./src/transceive_data.o
 .text          0x000000000000006c        0x0 ./main.o
 .text          0x000000000000006c        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x000000000000006c        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000006c        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x000000000000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.init_BAM
                0x000000000000006c       0xa4 ./src/bam.o
                0x000000000000006c                init_BAM
 .text.transmit_BAM_step
                0x0000000000000110      0x27a ./src/bam.o
                0x0000000000000110                transmit_BAM_step
 .text.__vector_13
                0x000000000000038a       0x82 ./src/bam.o
                0x000000000000038a                __vector_13
 .text.process_bam_input
                0x000000000000040c      0x128 ./src/bam.o
                0x000000000000040c                process_bam_input
 .text.switch_bam_pointer
                0x0000000000000534       0x40 ./src/bam.o
                0x0000000000000534                switch_bam_pointer
 .text.start_timer
                0x0000000000000574        0x8 ./src/bam.o
                0x0000000000000574                start_timer
 .text.reset_BAM
                0x000000000000057c       0x2e ./src/bam.o
                0x000000000000057c                reset_BAM
 .text.init_SPI
                0x00000000000005aa       0x1a ./src/transceive_data.o
                0x00000000000005aa                init_SPI
 .text.init_PIN_CHANGE_ISR
                0x00000000000005c4       0x1e ./src/transceive_data.o
                0x00000000000005c4                init_PIN_CHANGE_ISR
 .text.reset_rx_variables
                0x00000000000005e2        0xe ./src/transceive_data.o
                0x00000000000005e2                reset_rx_variables
 .text.__vector_3
                0x00000000000005f0       0x44 ./src/transceive_data.o
                0x00000000000005f0                __vector_3
 .text.check_valid_rx_data
                0x0000000000000634       0x34 ./src/transceive_data.o
                0x0000000000000634                check_valid_rx_data
 .text.__vector_17
                0x0000000000000668       0x64 ./src/transceive_data.o
                0x0000000000000668                __vector_17
 .text.main     0x00000000000006cc       0x10 ./main.o
                0x00000000000006cc                main
 .text.libgcc   0x00000000000006dc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006dc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006dc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000000000006dc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006dc        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x00000000000006dc                exit
                0x00000000000006dc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006dc        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006e0                _etext = .

.data           0x0000000000800100      0x198 load address 0x00000000000006e0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
 .data          0x0000000000800100        0x0 ./src/bam.o
 .data          0x0000000000800100        0x0 ./src/transceive_data.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.bam_timer_map_h
                0x0000000000800100        0x8 ./src/bam.o
 .data.bam_timer_map_l
                0x0000000000800108        0x8 ./src/bam.o
 *(.rodata)
 *(.rodata*)
 .rodata.lookup_bit_mask
                0x0000000000800110       0xc0 ./src/bam.o
                0x0000000000800110                lookup_bit_mask
 .rodata.lookup_byte_pos
                0x00000000008001d0       0xc0 ./src/bam.o
                0x00000000008001d0                lookup_byte_pos
 .rodata.bam_step_map
                0x0000000000800290        0x8 ./src/bam.o
 *(.gnu.linkonce.d*)
                0x0000000000800298                . = ALIGN (0x2)
                0x0000000000800298                _edata = .
                0x0000000000800298                PROVIDE (__data_end, .)

.bss            0x0000000000800298      0x209
                0x0000000000800298                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800298        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o
 .bss           0x0000000000800298        0x0 ./src/bam.o
 .bss           0x0000000000800298        0x0 ./src/transceive_data.o
 .bss           0x0000000000800298        0x0 ./main.o
 .bss           0x0000000000800298        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800298        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800298        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.bam_step  0x0000000000800298        0x1 ./src/bam.o
 .bss.bam_tbl_mem
                0x0000000000800299        0x2 ./src/bam.o
 .bss.bam_tbl_mem_1
                0x000000000080029b      0x100 ./src/bam.o
 .bss.bam_tbl_mem_2
                0x000000000080039b      0x100 ./src/bam.o
 .bss.bam_tbl_calc
                0x000000000080049b        0x2 ./src/bam.o
 .bss.ext_cmd_state_flag
                0x000000000080049d        0x1 ./src/transceive_data.o
 .bss.rx_flag   0x000000000080049e        0x1 ./src/transceive_data.o
 .bss.rx_byte_counter
                0x000000000080049f        0x1 ./src/transceive_data.o
 .bss.rx_buffer
                0x00000000008004a0        0x1 ./src/transceive_data.o
 *(COMMON)
                0x00000000008004a1                PROVIDE (__bss_end, .)
                0x00000000000006e0                __data_load_start = LOADADDR (.data)
                0x0000000000000878                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008004a1        0x0
                0x00000000008004a1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008004a1                PROVIDE (__noinit_end, .)
                0x00000000008004a1                _end = .
                0x00000000008004a1                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm88.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wol_kachel_rev_3.elf elf32-avr)
LOAD linker stubs
